[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Affero General Public License","title":"GNU Affero General Public License","text":"Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU Affero General Public License","text":"GNU Affero General Public License free, copyleft license software kinds works, specifically designed ensure cooperation community case network server software. licenses software practical works designed take away freedom share change works. contrast, General Public Licenses intended guarantee freedom share change versions program–make sure remains free software users. speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. Developers use General Public Licenses protect rights two steps: (1) assert copyright software, (2) offer License gives legal permission copy, distribute /modify software. secondary benefit defending users’ freedom improvements made alternate versions program, receive widespread use, become available developers incorporate. Many developers free software heartened encouraged resulting cooperation. However, case software used network servers, result may fail come . GNU General Public License permits making modified version letting public access server without ever releasing source code public. GNU Affero General Public License designed specifically ensure , cases, modified source code becomes available community. requires operator network server provide source code modified version running users server. Therefore, public use modified version, publicly accessible server, gives public access source code modified version. older license, called Affero General Public License published Affero, designed accomplish similar goals. different license, version Affero GPL, Affero released new version Affero GPL permits relicensing license. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions.","title":"GNU Affero General Public License","text":"“License” refers version 3 GNU Affero General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code.","title":"GNU Affero General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions.","title":"GNU Affero General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law.","title":"GNU Affero General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies.","title":"GNU Affero General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions.","title":"GNU Affero General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: work must carry prominent notices stating modified , giving relevant date. work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms.","title":"GNU Affero General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms.","title":"GNU Affero General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: Disclaiming warranty limiting liability differently terms sections 15 16 License; Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; Limiting use publicity purposes names licensors authors material; Declining grant rights trademark law use trade names, trademarks, service marks; Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination.","title":"GNU Affero General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies.","title":"GNU Affero General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients.","title":"GNU Affero General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents.","title":"GNU Affero General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom.","title":"GNU Affero General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-remote-network-interaction-use-with-the-gnu-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Remote Network Interaction; Use with the GNU General Public License.","title":"GNU Affero General Public License","text":"Notwithstanding provision License, modify Program, modified version must prominently offer users interacting remotely computer network (version supports interaction) opportunity receive Corresponding Source version providing access Corresponding Source network server charge, standard customary means facilitating copying software. Corresponding Source shall include Corresponding Source work covered version 3 GNU General Public License incorporated pursuant following paragraph. Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU General Public License single combined work, convey resulting work. terms License continue apply part covered work, work combined remain governed version 3 GNU General Public License.","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License.","title":"GNU Affero General Public License","text":"Free Software Foundation may publish revised /new versions GNU Affero General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU Affero General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU Affero General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU Affero General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty.","title":"GNU Affero General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability.","title":"GNU Affero General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16.","title":"GNU Affero General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU Affero General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. software can interact users remotely computer network, also make sure provides way users get source. example, program web application, interface display “Source” link leads users archive code. many ways offer source, different solutions better different programs; see section 13 specific requirements. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU AGPL, see https://www.gnu.org/licenses/.","code":"<one line to give the program's name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU Affero General Public License as     published by the Free Software Foundation, either version 3 of the     License, or (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU Affero General Public License for more details.      You should have received a copy of the GNU Affero General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>."},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"James Joseph Balamuta. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Balamuta J (2025). filestamp: Manage Copyright Code Headers R Files. R package version 0.0.1, https://r-pkg.thecoatlessprofessor.com/filestamp/.","code":"@Manual{,   title = {filestamp: Manage Copyright and Code Headers for R Files},   author = {James Joseph Balamuta},   year = {2025},   note = {R package version 0.0.1},   url = {https://r-pkg.thecoatlessprofessor.com/filestamp/}, }"},{"path":"/index.html","id":"filestamp-","dir":"","previous_headings":"","what":"Manage Copyright and Code Headers for R Files","title":"Manage Copyright and Code Headers for R Files","text":"filestamp makes easy add maintain consistent headers across files project, regardless programming language. Headers can include copyright notices, file descriptions, authorship information, metadata.","code":""},{"path":"/index.html","id":"what-are-file-headers","dir":"","previous_headings":"","what":"What are file headers?","title":"Manage Copyright and Code Headers for R Files","text":"File headers structured comments beginning code files contain important metadata. example, header might include:","code":"# Copyright (c) Acme Corp 2025 # Author: Jane Developer # License: MIT # Last updated: 2025-04-21"},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Manage Copyright and Code Headers for R Files","text":"can install development version filestamp GitHub :","code":"# install.packages(\"remotes\")  # From GitHub remotes::install_github(\"coatless-rpkg/filestamp\")"},{"path":"/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Manage Copyright and Code Headers for R Files","text":"section provides examples use filestamp add headers files. detailed information, please refer package documentation.","code":""},{"path":"/index.html","id":"loading-the-package","dir":"","previous_headings":"Getting Started","what":"Loading the Package","title":"Manage Copyright and Code Headers for R Files","text":"use filestamp, first need load package using library() function. make functions features filestamp available use R session.","code":"library(filestamp)"},{"path":"/index.html","id":"stamping-a-single-file","dir":"","previous_headings":"Getting Started","what":"Stamping a Single File","title":"Manage Copyright and Code Headers for R Files","text":"can use stamp_file() function add header single file. function takes file path argument can also accept template name custom template.","code":"# Stamp a file with the default template stamp_file(\"script.R\")  # Stamp a file with a specific template stamp_file(\"script.py\", template = \"mit\")  # Preview changes without modifying the file stamp_file(\"script.R\", action = \"dryrun\")  # Create a backup before stamping stamp_file(\"important_script.R\", action = \"backup\")"},{"path":"/index.html","id":"stamping-a-directory-with-multiple-files","dir":"","previous_headings":"Getting Started","what":"Stamping a Directory with Multiple Files","title":"Manage Copyright and Code Headers for R Files","text":"can use stamp_dir() function add headers files directory. can specify pattern match specific file types, can also choose stamp files subdirectories.","code":"# Stamp all R files in a directory stamp_dir(\"src\", pattern = \"\\\\.R$\")  # Stamp all files in a directory and subdirectories stamp_dir(\"project\", recursive = TRUE)  # Stamp with a specific template stamp_dir(\"src\", template = \"gpl-3\")"},{"path":[]},{"path":"/index.html","id":"using-built-in-templates","dir":"","previous_headings":"Templates","what":"Using Built-in Templates","title":"Manage Copyright and Code Headers for R Files","text":"package comes several built-templates: default - simple header copyright, author, license information mit - MIT License header gpl-3 - GNU General Public License header agpl-3 - GNU Affero General Public License header List available templates:","code":"stamp_templates() #> [1] \"default\" \"gpl-3\"   \"mit\""},{"path":"/index.html","id":"creating-custom-templates","dir":"","previous_headings":"Templates","what":"Creating Custom Templates","title":"Manage Copyright and Code Headers for R Files","text":"can create custom templates using stamp_template_create() function. allows define fields content header.","code":"# Create a custom template my_template <- stamp_template_create(   name = \"my_custom\",   fields = stamp_template_describe(     copyright = stamp_template_field(\"copyright\", \"MyCompany 2025\", required = TRUE),     author = stamp_template_field(\"author\", \"John Doe\", required = TRUE)   ),   content = stamp_template_content(     \"Copyright (c) {{copyright}}\",     \"Created by: {{author}}\",     \"File: {{filename}}\"   ) )  # Use the custom template stamp_file(\"script.R\", template = my_template)"},{"path":"/index.html","id":"updating-existing-headers","dir":"","previous_headings":"","what":"Updating Existing Headers","title":"Manage Copyright and Code Headers for R Files","text":"can update existing headers files using stamp_update() function. useful changing copyright years, adding new authors, modifying metadata. [!IMPORTANT] Make sure use stamp_update() function carefully, modify existing files. Always create backups making changes. helper functions may work expected file contain header header expected format.","code":"# Update copyright years in existing headers stamp_update(\"old_script.R\", list(   copyright = stamp_update_helper_copyright_extend() ))  # Add a new author to existing headers stamp_update(\"collaborative_script.R\", list(   author = stamp_update_helper_author_add(\"Jane Smith\") ))"},{"path":"/index.html","id":"language-support","dir":"","previous_headings":"","what":"Language Support","title":"Manage Copyright and Code Headers for R Files","text":"filestamp supports 15+ programming languages box: Add support additional languages:","code":"# List all supported languages languages() # Register a new language language_register(   \"kotlin\",   extensions = c(\"kt\", \"kts\"),   comment_single = \"//\",   comment_multi_start = \"/*\",   comment_multi_end = \"*/\" )"},{"path":"/index.html","id":"variables","dir":"","previous_headings":"","what":"Variables","title":"Manage Copyright and Code Headers for R Files","text":"Customize headers built-custom variables: Built-variables include: {{year}} - Current year {{date}} - Current date (YYYY-MM-DD) {{date_full}} - Full timestamp {{user}} - Current username {{company}} - Company name options {{filename}} - Current file name {{file_ext}} - File extension","code":"# List available variables stamp_variables_list()  # Add a custom variable stamp_variables_add(\"team\", \"Data Science\")  # Set company name globally options(filestamp.company = \"Acme Corp\")"},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Manage Copyright and Code Headers for R Files","text":"AGPL (>= 3)","code":""},{"path":"/reference/backup_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Create backup of file — backup_file","title":"Create backup of file — backup_file","text":"Create backup file","code":""},{"path":"/reference/backup_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create backup of file — backup_file","text":"","code":"backup_file(file)"},{"path":"/reference/backup_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create backup of file — backup_file","text":"file Character. Path file backup.","code":""},{"path":"/reference/backup_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create backup of file — backup_file","text":"Path backup file, invisibly.","code":""},{"path":"/reference/detect_language.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect language based on file extension — detect_language","title":"Detect language based on file extension — detect_language","text":"Detect language based file extension","code":""},{"path":"/reference/detect_language.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect language based on file extension — detect_language","text":"","code":"detect_language(file)"},{"path":"/reference/detect_language.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect language based on file extension — detect_language","text":"file Character. Path file.","code":""},{"path":"/reference/detect_language.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect language based on file extension — detect_language","text":"stamp_language object.","code":""},{"path":"/reference/determine_insert_position.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine where to insert header — determine_insert_position","title":"Determine where to insert header — determine_insert_position","text":"Determine insert header","code":""},{"path":"/reference/determine_insert_position.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine where to insert header — determine_insert_position","text":"","code":"determine_insert_position(content)"},{"path":"/reference/determine_insert_position.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine where to insert header — determine_insert_position","text":"content Character vector. File content lines.","code":""},{"path":"/reference/determine_insert_position.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine where to insert header — determine_insert_position","text":"Integer. Position insert header (0 beginning file).","code":""},{"path":"/reference/dot-onLoad.html","id":null,"dir":"Reference","previous_headings":"","what":"Register default languages on package load — .onLoad","title":"Register default languages on package load — .onLoad","text":"Register default languages package load","code":""},{"path":"/reference/dot-onLoad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register default languages on package load — .onLoad","text":"","code":".onLoad(libname, pkgname)"},{"path":"/reference/ensure_directory_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure directory exists — ensure_directory_exists","title":"Ensure directory exists — ensure_directory_exists","text":"Ensure directory exists","code":""},{"path":"/reference/ensure_directory_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure directory exists — ensure_directory_exists","text":"","code":"ensure_directory_exists(dir)"},{"path":"/reference/ensure_directory_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure directory exists — ensure_directory_exists","text":"dir Character. Path directory.","code":""},{"path":"/reference/ensure_directory_exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure directory exists — ensure_directory_exists","text":"TRUE invisibly directory exists, otherwise aborts.","code":""},{"path":"/reference/ensure_file_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure file exists — ensure_file_exists","title":"Ensure file exists — ensure_file_exists","text":"Ensure file exists","code":""},{"path":"/reference/ensure_file_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure file exists — ensure_file_exists","text":"","code":"ensure_file_exists(file)"},{"path":"/reference/ensure_file_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure file exists — ensure_file_exists","text":"file Character. Path file.","code":""},{"path":"/reference/ensure_file_exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure file exists — ensure_file_exists","text":"TRUE invisibly file exists, otherwise aborts.","code":""},{"path":"/reference/ensure_valid_action.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure action is valid — ensure_valid_action","title":"Ensure action is valid — ensure_valid_action","text":"Ensure action valid","code":""},{"path":"/reference/ensure_valid_action.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure action is valid — ensure_valid_action","text":"","code":"ensure_valid_action(action)"},{"path":"/reference/ensure_valid_action.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure action is valid — ensure_valid_action","text":"action Character. Action check.","code":""},{"path":"/reference/ensure_valid_action.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure action is valid — ensure_valid_action","text":"TRUE invisibly action valid, otherwise aborts.","code":""},{"path":"/reference/ensure_valid_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure template is valid — ensure_valid_template","title":"Ensure template is valid — ensure_valid_template","text":"Ensure template valid","code":""},{"path":"/reference/ensure_valid_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure template is valid — ensure_valid_template","text":"","code":"ensure_valid_template(template)"},{"path":"/reference/ensure_valid_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure template is valid — ensure_valid_template","text":"template Object. Template check.","code":""},{"path":"/reference/ensure_valid_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure template is valid — ensure_valid_template","text":"TRUE invisibly template valid, otherwise aborts.","code":""},{"path":"/reference/extract_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract header from file — extract_header","title":"Extract header from file — extract_header","text":"Extract header file","code":""},{"path":"/reference/extract_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract header from file — extract_header","text":"","code":"extract_header(file)"},{"path":"/reference/extract_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract header from file — extract_header","text":"file Character. Path file.","code":""},{"path":"/reference/extract_header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract header from file — extract_header","text":"List header information.","code":""},{"path":"/reference/extract_years.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract years from a string — extract_years","title":"Extract years from a string — extract_years","text":"Extract years string","code":""},{"path":"/reference/extract_years.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract years from a string — extract_years","text":"","code":"extract_years(text)"},{"path":"/reference/extract_years.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract years from a string — extract_years","text":"text Character. Text extract years .","code":""},{"path":"/reference/extract_years.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract years from a string — extract_years","text":"Numeric vector years.","code":""},{"path":"/reference/format_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Format header according to language's comment style — format_header","title":"Format header according to language's comment style — format_header","text":"Format header according language's comment style","code":""},{"path":"/reference/format_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format header according to language's comment style — format_header","text":"","code":"format_header(content, language)"},{"path":"/reference/format_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format header according to language's comment style — format_header","text":"content Character. Header content. language stamp_language object. Language comment formatting.","code":""},{"path":"/reference/format_header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format header according to language's comment style — format_header","text":"Character. Formatted header.","code":""},{"path":"/reference/guess_encoding.html","id":null,"dir":"Reference","previous_headings":"","what":"Guess file encoding — guess_encoding","title":"Guess file encoding — guess_encoding","text":"Guess file encoding","code":""},{"path":"/reference/guess_encoding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guess file encoding — guess_encoding","text":"","code":"guess_encoding(content)"},{"path":"/reference/guess_encoding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guess file encoding — guess_encoding","text":"content Raw vector. File content.","code":""},{"path":"/reference/guess_encoding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Guess file encoding — guess_encoding","text":"Character. Encoding name.","code":""},{"path":"/reference/guess_line_ending.html","id":null,"dir":"Reference","previous_headings":"","what":"Guess line endings — guess_line_ending","title":"Guess line endings — guess_line_ending","text":"Guess line endings","code":""},{"path":"/reference/guess_line_ending.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guess line endings — guess_line_ending","text":"","code":"guess_line_ending(content)"},{"path":"/reference/guess_line_ending.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guess line endings — guess_line_ending","text":"content Raw vector. File content.","code":""},{"path":"/reference/guess_line_ending.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Guess line endings — guess_line_ending","text":"Character. Line ending: \"\\n\" (LF), \"\\r\" (CR), \"\\r\\n\"(CRLF).","code":""},{"path":"/reference/has_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if file has a header — has_header","title":"Check if file has a header — has_header","text":"Check file header","code":""},{"path":"/reference/has_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if file has a header — has_header","text":"","code":"has_header(file)"},{"path":"/reference/has_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if file has a header — has_header","text":"file Character. Path file.","code":""},{"path":"/reference/has_header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if file has a header — has_header","text":"Logical. TRUE file header.","code":""},{"path":"/reference/header_file_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get file information (encoding, line endings, etc.) — header_file_info","title":"Get file information (encoding, line endings, etc.) — header_file_info","text":"Get file information (encoding, line endings, etc.)","code":""},{"path":"/reference/header_file_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get file information (encoding, line endings, etc.) — header_file_info","text":"","code":"header_file_info(file)"},{"path":"/reference/header_file_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get file information (encoding, line endings, etc.) — header_file_info","text":"file Character. Path file.","code":""},{"path":"/reference/header_file_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get file information (encoding, line endings, etc.) — header_file_info","text":"stamp_file_info object.","code":""},{"path":"/reference/header_find_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Find files in a directory — header_find_files","title":"Find files in a directory — header_find_files","text":"Find files directory","code":""},{"path":"/reference/header_find_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find files in a directory — header_find_files","text":"","code":"header_find_files(dir, pattern = NULL, recursive = FALSE)"},{"path":"/reference/header_find_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find files in a directory — header_find_files","text":"dir Character. Directory search. pattern Character. File pattern match (passed list.files). recursive Logical. Whether search recursively.","code":""},{"path":"/reference/header_find_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find files in a directory — header_find_files","text":"Character vector file paths.","code":""},{"path":"/reference/is_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if path is a file — is_file","title":"Check if path is a file — is_file","text":"Check path file","code":""},{"path":"/reference/is_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if path is a file — is_file","text":"","code":"is_file(path)"},{"path":"/reference/is_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if path is a file — is_file","text":"path Character. Path check.","code":""},{"path":"/reference/is_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if path is a file — is_file","text":"Logical. TRUE path file.","code":""},{"path":"/reference/language_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get registered language — language_get","title":"Get registered language — language_get","text":"Get registered language","code":""},{"path":"/reference/language_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get registered language — language_get","text":"","code":"language_get(name)"},{"path":"/reference/language_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get registered language — language_get","text":"name Character. Language name.","code":""},{"path":"/reference/language_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get registered language — language_get","text":"stamp_language object.","code":""},{"path":"/reference/language_register.html","id":null,"dir":"Reference","previous_headings":"","what":"Register a new language — language_register","title":"Register a new language — language_register","text":"Register new language","code":""},{"path":"/reference/language_register.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register a new language — language_register","text":"","code":"language_register(   name,   extensions,   comment_single,   comment_multi_start = NULL,   comment_multi_end = NULL )"},{"path":"/reference/language_register.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register a new language — language_register","text":"name Character. Language name. extensions Character vector. File extensions. comment_single Character. Single-line comment marker. comment_multi_start Character NULL. Multi-line comment start. comment_multi_end Character NULL. Multi-line comment end.","code":""},{"path":"/reference/language_register.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register a new language — language_register","text":"stamp_language object, invisibly.","code":""},{"path":"/reference/languages.html","id":null,"dir":"Reference","previous_headings":"","what":"List all registered languages — languages","title":"List all registered languages — languages","text":"List registered languages","code":""},{"path":"/reference/languages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all registered languages — languages","text":"","code":"languages()"},{"path":"/reference/languages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all registered languages — languages","text":"Named list stamp_language objects.","code":""},{"path":"/reference/modify_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify file with header — modify_file","title":"Modify file with header — modify_file","text":"Modify file header","code":""},{"path":"/reference/modify_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify file with header — modify_file","text":"","code":"modify_file(file, template, language, ...)"},{"path":"/reference/modify_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify file with header — modify_file","text":"file Character. Path file modify. template stamp_template object. Template use stamping. language stamp_language object. Detected language formatting comments. ... Additional arguments passed render_template.","code":""},{"path":"/reference/modify_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify file with header — modify_file","text":"TRUE invisibly success.","code":""},{"path":"/reference/preview_stamp.html","id":null,"dir":"Reference","previous_headings":"","what":"Preview stamp without modifying — preview_stamp","title":"Preview stamp without modifying — preview_stamp","text":"Preview stamp without modifying","code":""},{"path":"/reference/preview_stamp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preview stamp without modifying — preview_stamp","text":"","code":"preview_stamp(file, template, language, ...)"},{"path":"/reference/preview_stamp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preview stamp without modifying — preview_stamp","text":"file Character. Path file preview. template stamp_template object. Template use stamping. language stamp_language object. Detected language formatting comments. ... Additional arguments passed render_template.","code":""},{"path":"/reference/preview_stamp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preview stamp without modifying — preview_stamp","text":"stamp_preview object.","code":""},{"path":"/reference/preview_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Preview header update — preview_update","title":"Preview header update — preview_update","text":"Preview header update","code":""},{"path":"/reference/preview_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preview header update — preview_update","text":"","code":"preview_update(file, header)"},{"path":"/reference/preview_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preview header update — preview_update","text":"file Character. Path file. header List. Header information extract_header.","code":""},{"path":"/reference/preview_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preview header update — preview_update","text":"stamp_update_preview object.","code":""},{"path":"/reference/print.stamp_dir_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for directory results — print.stamp_dir_results","title":"Print method for directory results — print.stamp_dir_results","text":"Print method directory results","code":""},{"path":"/reference/print.stamp_dir_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for directory results — print.stamp_dir_results","text":"","code":"# S3 method for class 'stamp_dir_results' print(x, ...)"},{"path":"/reference/print.stamp_dir_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for directory results — print.stamp_dir_results","text":"x stamp_dir_results object. ... Additional arguments.","code":""},{"path":"/reference/print.stamp_dir_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for directory results — print.stamp_dir_results","text":"stamp_dir_results object, invisibly.","code":""},{"path":"/reference/print.stamp_file_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for file info — print.stamp_file_info","title":"Print method for file info — print.stamp_file_info","text":"Print method file info","code":""},{"path":"/reference/print.stamp_file_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for file info — print.stamp_file_info","text":"","code":"# S3 method for class 'stamp_file_info' print(x, ...)"},{"path":"/reference/print.stamp_file_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for file info — print.stamp_file_info","text":"x stamp_file_info object. ... Additional arguments.","code":""},{"path":"/reference/print.stamp_file_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for file info — print.stamp_file_info","text":"stamp_file_info object, invisibly.","code":""},{"path":"/reference/print.stamp_language.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for language — print.stamp_language","title":"Print method for language — print.stamp_language","text":"Print method language","code":""},{"path":"/reference/print.stamp_language.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for language — print.stamp_language","text":"","code":"# S3 method for class 'stamp_language' print(x, ...)"},{"path":"/reference/print.stamp_language.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for language — print.stamp_language","text":"x stamp_language object. ... Additional arguments.","code":""},{"path":"/reference/print.stamp_language.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for language — print.stamp_language","text":"stamp_language object, invisibly.","code":""},{"path":"/reference/print.stamp_preview.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for stamp preview — print.stamp_preview","title":"Print method for stamp preview — print.stamp_preview","text":"Print method stamp preview","code":""},{"path":"/reference/print.stamp_preview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for stamp preview — print.stamp_preview","text":"","code":"# S3 method for class 'stamp_preview' print(x, ...)"},{"path":"/reference/print.stamp_preview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for stamp preview — print.stamp_preview","text":"x stamp_preview object. ... Additional arguments.","code":""},{"path":"/reference/print.stamp_preview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for stamp preview — print.stamp_preview","text":"stamp_preview object, invisibly.","code":""},{"path":"/reference/print.stamp_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for templates — print.stamp_template","title":"Print method for templates — print.stamp_template","text":"Print method templates","code":""},{"path":"/reference/print.stamp_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for templates — print.stamp_template","text":"","code":"# S3 method for class 'stamp_template' print(x, ...)"},{"path":"/reference/print.stamp_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for templates — print.stamp_template","text":"x stamp_template object. ... Additional arguments.","code":""},{"path":"/reference/print.stamp_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for templates — print.stamp_template","text":"stamp_template object, invisibly.","code":""},{"path":"/reference/print.stamp_update_preview.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for update preview — print.stamp_update_preview","title":"Print method for update preview — print.stamp_update_preview","text":"Print method update preview","code":""},{"path":"/reference/print.stamp_update_preview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for update preview — print.stamp_update_preview","text":"","code":"# S3 method for class 'stamp_update_preview' print(x, ...)"},{"path":"/reference/print.stamp_update_preview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for update preview — print.stamp_update_preview","text":"x stamp_update_preview object. ... Additional arguments.","code":""},{"path":"/reference/print.stamp_update_preview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for update preview — print.stamp_update_preview","text":"stamp_update_preview object, invisibly.","code":""},{"path":"/reference/render_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Render template with variables — render_template","title":"Render template with variables — render_template","text":"Render template variables","code":""},{"path":"/reference/render_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render template with variables — render_template","text":"","code":"render_template(template, file, ...)"},{"path":"/reference/render_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render template with variables — render_template","text":"template stamp_template object. Template render. file Character. Path file. ... Additional variables.","code":""},{"path":"/reference/render_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render template with variables — render_template","text":"Character. Rendered template.","code":""},{"path":"/reference/stamp.html","id":null,"dir":"Reference","previous_headings":"","what":"Stamp a file or directory with a header — stamp","title":"Stamp a file or directory with a header — stamp","text":"main entry point filestamp package. automatically detects path file directory calls appropriate function.","code":""},{"path":"/reference/stamp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stamp a file or directory with a header — stamp","text":"","code":"stamp(path, template = NULL, action = \"modify\", ...)"},{"path":"/reference/stamp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stamp a file or directory with a header — stamp","text":"path Character. Path file directory stamp. template Character stamp_template object. Template use stamping. action Character. Action perform: \"modify\", \"dryrun\", \"backup\". ... Additional arguments passed stamp_file stamp_dir.","code":""},{"path":"/reference/stamp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stamp a file or directory with a header — stamp","text":"Result object, invisibly.","code":""},{"path":"/reference/stamp_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Stamp all files in a directory with a header — stamp_dir","title":"Stamp all files in a directory with a header — stamp_dir","text":"Stamp files directory header","code":""},{"path":"/reference/stamp_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stamp all files in a directory with a header — stamp_dir","text":"","code":"stamp_dir(   dir,   template = NULL,   action = \"modify\",   pattern = NULL,   recursive = FALSE,   ... )"},{"path":"/reference/stamp_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stamp all files in a directory with a header — stamp_dir","text":"dir Character. Path directory stamp. template Character stamp_template object. Template use stamping. action Character. Action perform: \"modify\", \"dryrun\", \"backup\". pattern Character. File pattern match (passed list.files). recursive Logical. Whether search recursively. ... Additional arguments passed stamp_file.","code":""},{"path":"/reference/stamp_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stamp all files in a directory with a header — stamp_dir","text":"stamp_dir_results object.","code":""},{"path":"/reference/stamp_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Stamp a single file with a header — stamp_file","title":"Stamp a single file with a header — stamp_file","text":"Stamp single file header","code":""},{"path":"/reference/stamp_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stamp a single file with a header — stamp_file","text":"","code":"stamp_file(file, template = NULL, action = \"modify\", ...)"},{"path":"/reference/stamp_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stamp a single file with a header — stamp_file","text":"file Character. Path file stamp. template Character stamp_template object. Template use stamping. action Character. Action perform: \"modify\", \"dryrun\", \"backup\". ... Additional arguments passed render_template.","code":""},{"path":"/reference/stamp_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stamp a single file with a header — stamp_file","text":"Result object, invisibly.","code":""},{"path":"/reference/stamp_template_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Create template content with multiline support — stamp_template_content","title":"Create template content with multiline support — stamp_template_content","text":"Create template content multiline support","code":""},{"path":"/reference/stamp_template_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create template content with multiline support — stamp_template_content","text":"","code":"stamp_template_content(...)"},{"path":"/reference/stamp_template_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create template content with multiline support — stamp_template_content","text":"... Character strings concatenated.","code":""},{"path":"/reference/stamp_template_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create template content with multiline support — stamp_template_content","text":"stamp_template_content object.","code":""},{"path":"/reference/stamp_template_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new template — stamp_template_create","title":"Create a new template — stamp_template_create","text":"Create new template","code":""},{"path":"/reference/stamp_template_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new template — stamp_template_create","text":"","code":"stamp_template_create(name, fields = NULL, content = NULL)"},{"path":"/reference/stamp_template_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new template — stamp_template_create","text":"name Character. Name template. fields stamp_template_fields object. Template fields. content stamp_template_content object. Template content.","code":""},{"path":"/reference/stamp_template_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new template — stamp_template_create","text":"stamp_template object.","code":""},{"path":"/reference/stamp_template_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Get default template — stamp_template_default","title":"Get default template — stamp_template_default","text":"Get default template","code":""},{"path":"/reference/stamp_template_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get default template — stamp_template_default","text":"","code":"stamp_template_default()"},{"path":"/reference/stamp_template_default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get default template — stamp_template_default","text":"stamp_template object.","code":""},{"path":"/reference/stamp_template_describe.html","id":null,"dir":"Reference","previous_headings":"","what":"Define template fields — stamp_template_describe","title":"Define template fields — stamp_template_describe","text":"Define template fields","code":""},{"path":"/reference/stamp_template_describe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define template fields — stamp_template_describe","text":"","code":"stamp_template_describe(...)"},{"path":"/reference/stamp_template_describe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define template fields — stamp_template_describe","text":"... Named list stamp_template_field objects.","code":""},{"path":"/reference/stamp_template_describe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define template fields — stamp_template_describe","text":"stamp_template_fields object.","code":""},{"path":"/reference/stamp_template_field.html","id":null,"dir":"Reference","previous_headings":"","what":"Define individual field — stamp_template_field","title":"Define individual field — stamp_template_field","text":"Define individual field","code":""},{"path":"/reference/stamp_template_field.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define individual field — stamp_template_field","text":"","code":"stamp_template_field(name, default = NULL, required = FALSE)"},{"path":"/reference/stamp_template_field.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define individual field — stamp_template_field","text":"name Character. Field name. default . Default value field. required Logical. Whether field required.","code":""},{"path":"/reference/stamp_template_field.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define individual field — stamp_template_field","text":"stamp_template_field object.","code":""},{"path":"/reference/stamp_template_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Load template from YAML — stamp_template_load","title":"Load template from YAML — stamp_template_load","text":"Load template YAML","code":""},{"path":"/reference/stamp_template_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load template from YAML — stamp_template_load","text":"","code":"stamp_template_load(name)"},{"path":"/reference/stamp_template_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load template from YAML — stamp_template_load","text":"name Character. Name template.","code":""},{"path":"/reference/stamp_template_load.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load template from YAML — stamp_template_load","text":"stamp_template object.","code":""},{"path":"/reference/stamp_templates.html","id":null,"dir":"Reference","previous_headings":"","what":"List available templates — stamp_templates","title":"List available templates — stamp_templates","text":"List available templates","code":""},{"path":"/reference/stamp_templates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List available templates — stamp_templates","text":"","code":"stamp_templates()"},{"path":"/reference/stamp_templates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List available templates — stamp_templates","text":"Character vector template names.","code":""},{"path":"/reference/stamp_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Update existing file headers — stamp_update","title":"Update existing file headers — stamp_update","text":"Update existing file headers","code":""},{"path":"/reference/stamp_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update existing file headers — stamp_update","text":"","code":"stamp_update(file, updates, action = \"modify\")"},{"path":"/reference/stamp_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update existing file headers — stamp_update","text":"file Character. Path file update. updates Named list. Updates apply header fields. action Character. Action perform: \"modify\", \"dryrun\", \"backup\".","code":""},{"path":"/reference/stamp_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update existing file headers — stamp_update","text":"TRUE invisibly success.","code":""},{"path":"/reference/stamp_update_helper_author_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for adding authors — stamp_update_helper_author_add","title":"Helper for adding authors — stamp_update_helper_author_add","text":"Helper adding authors","code":""},{"path":"/reference/stamp_update_helper_author_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper for adding authors — stamp_update_helper_author_add","text":"","code":"stamp_update_helper_author_add(new_author)"},{"path":"/reference/stamp_update_helper_author_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for adding authors — stamp_update_helper_author_add","text":"new_author Character. New author add.","code":""},{"path":"/reference/stamp_update_helper_author_add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper for adding authors — stamp_update_helper_author_add","text":"Function update author field.","code":""},{"path":"/reference/stamp_update_helper_copyright_extend.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for extending copyright years — stamp_update_helper_copyright_extend","title":"Helper for extending copyright years — stamp_update_helper_copyright_extend","text":"Helper extending copyright years","code":""},{"path":"/reference/stamp_update_helper_copyright_extend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper for extending copyright years — stamp_update_helper_copyright_extend","text":"","code":"stamp_update_helper_copyright_extend(initial_year = NULL)"},{"path":"/reference/stamp_update_helper_copyright_extend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for extending copyright years — stamp_update_helper_copyright_extend","text":"initial_year Character NULL. Initial year use year found.","code":""},{"path":"/reference/stamp_update_helper_copyright_extend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper for extending copyright years — stamp_update_helper_copyright_extend","text":"Function update copyright field.","code":""},{"path":"/reference/stamp_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Get built-in variables — stamp_variables","title":"Get built-in variables — stamp_variables","text":"Get built-variables","code":""},{"path":"/reference/stamp_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get built-in variables — stamp_variables","text":"","code":"stamp_variables()"},{"path":"/reference/stamp_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get built-in variables — stamp_variables","text":"Environment built-variables.","code":""},{"path":"/reference/stamp_variables_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add custom variable — stamp_variables_add","title":"Add custom variable — stamp_variables_add","text":"Add custom variable","code":""},{"path":"/reference/stamp_variables_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add custom variable — stamp_variables_add","text":"","code":"stamp_variables_add(name, value)"},{"path":"/reference/stamp_variables_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add custom variable — stamp_variables_add","text":"name Character. Variable name. value . Variable value function.","code":""},{"path":"/reference/stamp_variables_add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add custom variable — stamp_variables_add","text":"Environment variables.","code":""},{"path":"/reference/stamp_variables_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List all available variables — stamp_variables_list","title":"List all available variables — stamp_variables_list","text":"List available variables","code":""},{"path":"/reference/stamp_variables_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all available variables — stamp_variables_list","text":"","code":"stamp_variables_list()"},{"path":"/reference/stamp_variables_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all available variables — stamp_variables_list","text":"Character vector variable names.","code":""},{"path":"/reference/update_file_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Update file header — update_file_header","title":"Update file header — update_file_header","text":"Update file header","code":""},{"path":"/reference/update_file_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update file header — update_file_header","text":"","code":"update_file_header(file, header)"},{"path":"/reference/update_file_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update file header — update_file_header","text":"file Character. Path file. header List. Header information extract_header.","code":""},{"path":"/reference/update_file_header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update file header — update_file_header","text":"TRUE invisibly success.","code":""},{"path":"/reference/update_header_field.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a header field — update_header_field","title":"Update a header field — update_header_field","text":"Update header field","code":""},{"path":"/reference/update_header_field.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a header field — update_header_field","text":"","code":"update_header_field(header, field, update)"},{"path":"/reference/update_header_field.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a header field — update_header_field","text":"header List. Header information extract_header. field Character. Field name update. update Function character. Update apply.","code":""},{"path":"/reference/update_header_field.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a header field — update_header_field","text":"Updated header list.","code":""}]
